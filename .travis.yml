language: minimal
os: linux

branches:
  only:
  - develop
  - /travis\/*/
  - /^\d+.\d+(.\d+)?(-\S*)?$/

env:
  global:
    - OS_ARCH=x86_64

services:
  - docker

stages:
  - build
  - test
  - buildapp
  - clean

before_script: |
  # Regular package and version
  PACKAGE=$(grep elements_project CMakeLists.txt | sed 's/.*(//'| cut -d' ' -f1)
  VERSION=$(grep elements_project CMakeLists.txt | sed 's/.*(//' | sed 's/[^ ]* //' | sed 's/ .*//')
  # For pull requests and branches other than develop and master, override the version used in bintray
  # with a decorated one
  BINTRAY_VERSION="${VERSION}"

  if [ -n "${TRAVIS_TAG}" ]; then
    TARGET_REPO="master"
    VERSION="${TRAVIS_TAG}"
    BINTRAY_VERSION="${TRAVIS_TAG}"
    TESTS_BRANCH="master"
  elif [ -n "${TRAVIS_PULL_REQUEST}" ] && [ "${TRAVIS_PULL_REQUEST}" != "false" ]; then
    TARGET_REPO="${PACKAGE}-pull${TRAVIS_PULL_REQUEST}"
    TESTS_BRANCH="${TRAVIS_PULL_REQUEST_BRANCH}"
    BINTRAY_VERSION="${VERSION}-pull${TRAVIS_PULL_REQUEST}"
  else
    TARGET_REPO="${TRAVIS_BRANCH//\//-}"
    TESTS_BRANCH="${TRAVIS_BRANCH}"
    if [[ ! "${TRAVIS_BRANCH}" =~ ^(master|develop)$ ]]; then
      BINTRAY_VERSION="${VERSION}-${TARGET_REPO}"
    fi
  fi
  export PACKAGE VERSION BINTRAY_VERSION TARGET_REPO TESTS_BRANCH

install: |
  curl -L "https://api.bintray.com/content/jfrog/jfrog-cli-go/\$latest/jfrog-cli-linux-386/jfrog?bt_package=jfrog-cli-linux-386" -o jfrog
  chmod a+x jfrog
  ./jfrog bt config --user "${BINTRAY_USER}" --key "${BINTRAY_TOKEN}" --licenses LGPL3

jobs:
  include:
  - &build
    stage: build
    env: OS_TYPE=fedora OS_VERSION=30
    script:
      - docker run --name builder -v "$(pwd):/src" "${OS_TYPE}:${OS_VERSION}" bash "/src/.travis/build-rpm.sh"
      - docker cp "builder:/build/Packages/RPM/RPMS/x86_64" "./packages"   
    after_success: |
      if [ ! -z "${BINTRAY_REPO}" ]; then
        ./jfrog bt u --publish --override "packages/*.rpm" "${BINTRAY_REPO}/${PACKAGE}/${BINTRAY_VERSION}" "/${TARGET_REPO}/${OS_TYPE}/${OS_VERSION}/${OS_ARCH}/rpms/"
      fi

  - &test
    stage: test
    env: OS_TYPE=fedora OS_VERSION=30
    script: |
      docker run --rm --name tester -v "$(pwd):/src" -v "$(pwd)/tests:/tests" "${OS_TYPE}:${OS_VERSION}" bash "/src/.travis/run-litmus.sh" "${PACKAGE}" "${VERSION}" "${TARGET_REPO}" "${TESTS_BRANCH}"

  - <<: *build
    env: OS_TYPE=fedora OS_VERSION=31
  - <<: *build
    env: OS_TYPE=fedora OS_VERSION=32
  - <<: *build
    env: OS_TYPE=centos OS_VERSION=7
# Note that there are no tests for CentOS7 or Fedora 29
# We do not have full support (model fitting) on CentOS7, nor Python3 support on Fedora 29
  - <<: *test
    env: OS_TYPE=fedora OS_VERSION=31
  - <<: *test
    env: OS_TYPE=fedora OS_VERSION=32
  - stage: buildapp
    if: tag IS present
    env: OS_TYPE=centos OS_VERSION=7
    script:
      - docker run --name appbuilder --device /dev/fuse --privileged -v "$(pwd):/src" "${OS_TYPE}:${OS_VERSION}" bash "/src/.travis/build-appimage.sh"
      - docker cp "appbuilder:/SourceXtractor++-x86_64.AppImage" "."
    deploy:
      provider: releases
      on:
        tags: true
      api_key: $GITHUB_OAUTH_TOKEN
      file: SourceXtractor++-x86_64.AppImage
      skip_cleanup: true

# Clean up rpms unless they are from master or develop
  - stage: clean
    if: type = pull_request OR NOT (branch = develop OR tag IS present)
    language: python
    install: |
      pip3 install requests
      curl -L "https://api.bintray.com/content/jfrog/jfrog-cli-go/\$latest/jfrog-cli-linux-386/jfrog?bt_package=jfrog-cli-linux-386" -o jfrog
      chmod a+x jfrog
      ./jfrog bt config --user "${BINTRAY_USER}" --key "${BINTRAY_TOKEN}" --licenses LGPL3
    script: |
      ./jfrog bt version-delete --quiet "${BINTRAY_REPO}/${PACKAGE}/${BINTRAY_VERSION}"
      # Remove left-over repodata
      sleep 5
      python3 .travis/bintray.py -u "${BINTRAY_USER}" -t "${BINTRAY_TOKEN}" rm -r "${BINTRAY_REPO}/${TARGET_REPO}"

