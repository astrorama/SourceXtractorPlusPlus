language: minimal
os: linux

branches:
  only:
  - develop
  - /travis\/*/
  - /^\d+.\d+(.\d+)?(-\S*)?$/

env:
  global:
    - OS_ARCH=x86_64

services:
  - docker

stages:
  - build
  - test
  - buildapp
  - clean

before_script: |
  PACKAGE=$(grep elements_project CMakeLists.txt | sed 's/.*(//'| cut -d' ' -f1)
  VERSION=$(grep elements_project CMakeLists.txt | sed 's/.*(//' | sed 's/[^ ]* //' | sed 's/ .*//')
  if [ -n "${TRAVIS_TAG}" ]; then
    TARGET_REPO="master"
    VERSION="${TRAVIS_TAG}"
    TESTS_BRANCH="master"
  elif [ -n "${TRAVIS_PULL_REQUEST}" ] && [ "${TRAVIS_PULL_REQUEST}" != "false" ]; then
    TARGET_REPO="${PACKAGE}-pull${TRAVIS_PULL_REQUEST}"
    TESTS_BRANCH="${TRAVIS_PULL_REQUEST_BRANCH}"
  else
    TARGET_REPO="${TRAVIS_BRANCH//\//-}"
    TESTS_BRANCH="${TRAVIS_BRANCH}"
  fi
  export PACKAGE VERSION TARGET_REPO TESTS_BRANCH

jobs:
  include:
  - &build
    stage: build
    env: OS_TYPE=fedora OS_VERSION=29
    script:
      - docker run --name builder -v "$(pwd):/src" "${OS_TYPE}:${OS_VERSION}" bash "/src/.travis/build-rpm.sh"
      - docker cp "builder:/build/Packages/RPM/RPMS/x86_64" "./packages"   
    after_success: |
      if [ ! -z "${BINTRAY_REPO}" ]; then
        cd packages
        for p in *.rpm; do
          curl -T "${p}" "-u${BINTRAY_USER}:${BINTRAY_TOKEN}" "https://api.bintray.com/content/${BINTRAY_REPO}/${TARGET_REPO}/${OS_TYPE}/${OS_VERSION}/${OS_ARCH}/rpms/${p};bt_package=${PACKAGE};bt_version=${VERSION}?override=1&publish=1"
        done;
      fi

  - &test
    stage: test
    env: OS_TYPE=fedora OS_VERSION=30
    script: |
      docker run --rm --name tester -v "$(pwd):/src" -v "$(pwd)/tests:/tests" "${OS_TYPE}:${OS_VERSION}" bash "/src/.travis/run-litmus.sh" "${PACKAGE}" "${VERSION}" "${TARGET_REPO}" "${TESTS_BRANCH}"

  - <<: *build
    env: OS_TYPE=fedora OS_VERSION=30
  - <<: *build
    env: OS_TYPE=fedora OS_VERSION=31
  - <<: *build
    env: OS_TYPE=fedora OS_VERSION=32
  - <<: *build
    env: OS_TYPE=centos OS_VERSION=7
# Note that there are no tests for CentOS7 or Fedora 29
# We do not have full support (model fitting) on CentOS7, nor Python3 support on Fedora 29
  - <<: *test
    env: OS_TYPE=fedora OS_VERSION=31
  - <<: *test
    env: OS_TYPE=fedora OS_VERSION=32
  - stage: buildapp
    if: tag IS present
    env: OS_TYPE=centos OS_VERSION=7
    script:
      - docker run --name appbuilder --device /dev/fuse --privileged -v "$(pwd):/src" "${OS_TYPE}:${OS_VERSION}" bash "/src/.travis/build-appimage.sh"
      - docker cp "appbuilder:/sourcextractor++-x86_64.AppImage" "."
    deploy:
      provider: releases
      on:
        tags: true
      api_key: $GITHUB_OAUTH_TOKEN
      file: sourcextractor++-x86_64.AppImage
      skip_cleanup: true

# Clean up rpms unless they are from master or develop
  - stage: clean
    if: type = pull_request OR NOT (branch = develop OR tag IS present)
    language: python
    install:
      - pip3 install requests
    script: |
      python3 .travis/bintray.py -u "${BINTRAY_USER}" -t "${BINTRAY_TOKEN}" rm -r "${BINTRAY_REPO}/${TARGET_REPO}" --pattern ".+\.rpm"
      sleep 10
      python3 .travis/bintray.py -u "${BINTRAY_USER}" -t "${BINTRAY_TOKEN}" rm -r "${BINTRAY_REPO}/${TARGET_REPO}"
