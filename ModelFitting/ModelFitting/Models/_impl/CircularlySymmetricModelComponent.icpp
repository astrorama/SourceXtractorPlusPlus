/** 
 * @file CircularlySymmetricModelComponent.icpp
 * @date September 1, 2015
 * @author Nikolaos Apostolakos
 */

#include <utility> // for std::forward
#include <cmath> // for std::sqrt, std::cos, std::sin
#include <tuple> // for std::tie
#include <functional> // for std::ref

namespace ModelFitting {

template <typename Profile>
template <typename... ProfileParameters>
CircularlySymmetricModelComponent<Profile>::CircularlySymmetricModelComponent(
                                ProfileParameters&&... proj_parameters)
          : m_profile(std::forward<ProfileParameters>(proj_parameters)...) {
}

template <typename Profile>
CircularlySymmetricModelComponent<Profile>::~CircularlySymmetricModelComponent() = default;

template <typename Profile>
double CircularlySymmetricModelComponent<Profile>::getValue(double x, double y) {
  return m_profile(std::sqrt(x*x + y*y));
}

} // end of namespace ModelFitting